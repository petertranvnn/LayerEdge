#!/bin/bash

# ƒê·ªãnh nghƒ©a m√†u s·∫Øc
RED='\033[0;31m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # Kh√¥ng m√†u

# Hi·ªÉn th·ªã banner
echo -e "${BLUE}"
echo -e "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó"
echo -e "‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë"
echo -e "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë"
echo -e "‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë"
echo -e "‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë"
echo -e "‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"
echo -e "${GREEN}Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi LayerEdge Light Node!${NC}"
sleep 5

# 1Ô∏è‚É£ Thi·∫øt l·∫≠p ban ƒë·∫ßu
echo -e "${YELLOW}üöÄ B·∫Øt ƒë·∫ßu c√†i ƒë·∫∑t...${NC}"
sudo apt update && sudo apt upgrade -y
sudo apt install build-essential git screen net-tools -y
echo -e "${GREEN}‚úÖ ƒê√£ c√†i ƒë·∫∑t c√¥ng c·ª• c∆° b·∫£n!${NC}"

# 2Ô∏è‚É£ C√†i ƒë·∫∑t Go 1.21.6
echo -e "${CYAN}üì• C√†i ƒë·∫∑t Go 1.21.6...${NC}"
wget https://go.dev/dl/go1.21.6.linux-amd64.tar.gz -O go1.21.6.tar.gz
sudo tar -C /usr/local -xzf go1.21.6.tar.gz
echo "export GOROOT=/usr/local/go" >> ~/.bashrc
echo "export GOPATH=\$HOME/go" >> ~/.bashrc
echo "export PATH=\$GOPATH/bin:\$GOROOT/bin:\$PATH" >> ~/.bashrc
source ~/.bashrc
rm go1.21.6.tar.gz
echo -e "${GREEN}‚úÖ ƒê√£ c√†i ƒë·∫∑t $(go version)!${NC}"

# 3Ô∏è‚É£ C√†i ƒë·∫∑t Rust v√† Cargo
echo -e "${CYAN}üì• C√†i ƒë·∫∑t Rust v√† Cargo...${NC}"
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
source $HOME/.cargo/env
sudo apt install cargo -y
echo -e "${GREEN}‚úÖ ƒê√£ c√†i ƒë·∫∑t Rust: $(rustc --version)!${NC}"

# 4Ô∏è‚É£ C√†i ƒë·∫∑t Risc0 Toolchain
echo -e "${CYAN}üì• C√†i ƒë·∫∑t Risc0 Toolchain...${NC}"
curl -L https://risczero.com/install | bash
source "/root/.bashrc"
rzup install
source "/root/.bashrc"
if command -v rzup >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Risc0 Toolchain: $(rzup --version)!${NC}"
else
    echo -e "${RED}‚ùå Kh√¥ng c√†i ƒë∆∞·ª£c Risc0 Toolchain. Tho√°t...${NC}"
    exit 1
fi

# 5Ô∏è‚É£ Sao ch√©p kho l∆∞u tr·ªØ
echo -e "${YELLOW}üîó Sao ch√©p kho l∆∞u tr·ªØ...${NC}"
rm -rf $HOME/light-node
git clone https://github.com/Layer-Edge/light-node.git $HOME/light-node
cd $HOME/light-node
echo -e "${GREEN}‚úÖ ƒê√£ sao ch√©p kho l∆∞u tr·ªØ!${NC}"

# 6Ô∏è‚É£ C·∫•u h√¨nh .env
echo -e "${YELLOW}üîÑ C·∫•u h√¨nh bi·∫øn m√¥i tr∆∞·ªùng...${NC}"
echo -e "${CYAN}üîë Nh·∫≠p kh√≥a ri√™ng EVM (c√≥ th·ªÉ d√πng v√≠ burner):${NC}"
read -p "Nh·∫≠p kh√≥a ri√™ng: " PRIVATE_KEY
cat > .env << EOL
GRPC_URL=grpc.testnet.layeredge.io:9090
CONTRACT_ADDR=cosmos1ufs3tlq4umljk0qfe8k5ya0x6hpavn897u2cnf9k0en9jr7qarqqt56709
ZK_PROVER_URL=http://127.0.0.1:3001
API_REQUEST_TIMEOUT=100
POINTS_API=light-node.layeredge.io
PRIVATE_KEY=$PRIVATE_KEY
EOL
echo -e "${GREEN}‚úÖ ƒê√£ t·∫°o .env!${NC}"

# 7Ô∏è‚É£ Ki·ªÉm tra t√†i nguy√™n
echo -e "${YELLOW}üîç Ki·ªÉm tra t√†i nguy√™n VPS...${NC}"
cpu_cores=$(nproc)
memory=$(free -h | awk '/^Mem:/ {print $2}')
echo -e "CPU: $cpu_cores cores"
echo -e "RAM: $memory"
if [ $cpu_cores -lt 2 ] || [ $(free -m | awk '/^Mem:/ {print $2}') -lt 2048 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è VPS c√≥ th·ªÉ kh√¥ng ƒë·ªß m·∫°nh (c·∫ßn √≠t nh·∫•t 2 CPU, 2GB RAM).${NC}"
fi

# 8Ô∏è‚É£ D·ªçn d·∫πp screen c≈©
echo -e "${YELLOW}üßπ D·ªçn d·∫πp screen c≈©...${NC}"
screen -ls | grep Detached | awk '{print $1}' | xargs -I {} screen -X -S {} quit
echo -e "${GREEN}‚úÖ ƒê√£ x√≥a screen c≈©!${NC}"

# 9Ô∏è‚É£ Ki·ªÉm tra c·ªïng 3001
echo -e "${YELLOW}üîç Ki·ªÉm tra c·ªïng 3001...${NC}"
if netstat -tuln | grep -q ":3001"; then
    echo -e "${RED}‚ùå C·ªïng 3001 ƒëang b·ªã chi·∫øm d·ª•ng. Tho√°t...${NC}"
    exit 1
else
    echo -e "${GREEN}‚úÖ C·ªïng 3001 tr·ªëng!${NC}"
fi

# 10Ô∏è‚É£ Ch·∫°y Risc0 Merkle Service
echo -e "${YELLOW}üõ†Ô∏è Bi√™n d·ªãch v√† ch·∫°y Risc0 Merkle Service...${NC}"
cd $HOME/light-node/risc0-merkle-service
cargo build
if [ $? -eq 0 ]; then
    screen -S layeredge -dm bash -c "cargo run > $HOME/risc0-merkle.log 2>&1"
    sleep 20
    if screen -ls | grep -q "layeredge" && netstat -tuln | grep -q ":3001"; then
        echo -e "${GREEN}üöÄ Risc0 Merkle Service ƒëang ch·∫°y tr√™n c·ªïng 3001!${NC}"
        echo -e "Log: ${CYAN}$HOME/risc0-merkle.log${NC}"
    else
        echo -e "${RED}‚ùå Risc0 Merkle Service kh√¥ng ch·∫°y ho·∫∑c kh√¥ng m·ªü c·ªïng 3001:${NC}"
        cat $HOME/risc0-merkle.log
        echo -e "${YELLOW}Ch·∫°y th·ªß c√¥ng: cd $HOME/light-node/risc0-merkle-service && cargo run${NC}"
        exit 1
    fi
else
    echo -e "${RED}‚ùå L·ªói bi√™n d·ªãch Risc0 Merkle Service.${NC}"
    exit 1
fi

# 11Ô∏è‚É£ Ch·∫°y Light Node
echo -e "${YELLOW}üñ•Ô∏è Bi√™n d·ªãch v√† ch·∫°y Light Node...${NC}"
cd $HOME/light-node
go build
if [ $? -eq 0 ]; then
    if [ -f ./light-node ]; then
        screen -S light-node -dm bash -c "./light-node > $HOME/light-node.log 2>&1"
        sleep 20
        if screen -ls | grep -q "light-node"; then
            echo -e "${GREEN}üöÄ Light Node ƒëang ch·∫°y!${NC}"
            echo -e "Log: ${CYAN}$HOME/light-node.log${NC}"
        else
            echo -e "${RED}‚ùå Light Node th·∫•t b·∫°i:${NC}"
            cat $HOME/light-node.log
            echo -e "${YELLOW}Ch·∫°y th·ªß c√¥ng: cd $HOME/light-node && ./light-node${NC}"
            exit 1
        fi
    else
        echo -e "${RED}‚ùå Kh√¥ng t√¨m th·∫•y t·ªáp 'light-node'.${NC}"
        exit 1
    fi
else
    echo -e "${RED}‚ùå L·ªói bi√™n d·ªãch Light Node.${NC}"
    exit 1
fi

# 12Ô∏è‚É£ Ho√†n t·∫•t
echo -e "${GREEN}üéâ C√†i ƒë·∫∑t ho√†n t·∫•t!${NC}"
echo -e "D·ªãch v·ª• ƒëang ch·∫°y:"
echo -e "  - Risc0 Merkle Service: ${CYAN}screen -r layeredge${NC}"
echo -e "  - Light Node: ${CYAN}screen -r light-node${NC}"
echo -e "${YELLOW}üîç Danh s√°ch screen:${NC}"
screen -ls
echo -e "${YELLOW}üí° Ki·ªÉm tra log:${NC}"
echo -e "  - Risc0: ${CYAN}cat $HOME/risc0-merkle.log${NC}"
echo -e "  - Light Node: ${CYAN}cat $HOME/light-node.log${NC}"

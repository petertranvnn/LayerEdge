#!/bin/bash

# ƒê·ªãnh nghƒ©a m√†u s·∫Øc
RED='\033[0;31m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # Kh√¥ng m√†u

# Hi·ªÉn th·ªã banner v√† th√¥ng b√°o ch√†o m·ª´ng
echo -e "${BLUE}"
echo -e "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó"
echo -e "‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë"
echo -e "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë"
echo -e "‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë"
echo -e "‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë"
echo -e "‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"
echo -e "${GREEN}Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi LayerEdge Light Node!${NC}"
echo -e "H∆∞·ªõng d·∫´n n√†y s·∫Ω gi√∫p b·∫°n c√†i ƒë·∫∑t v√† ch·∫°y node tr√™n VPS m·ªôt c√°ch d·ªÖ d√†ng."
sleep 5

# 1Ô∏è‚É£ Thi·∫øt l·∫≠p ban ƒë·∫ßu
echo -e "${YELLOW}üöÄ B·∫Øt ƒë·∫ßu qu√° tr√¨nh c√†i ƒë·∫∑t...${NC}"
echo -e "C·∫≠p nh·∫≠t h·ªá th·ªëng v√† c√†i ƒë·∫∑t c√°c c√¥ng c·ª• c∆° b·∫£n..."
sudo apt update && sudo apt upgrade -y
sudo apt install build-essential git screen net-tools -y
echo -e "${GREEN}‚úÖ ƒê√£ c·∫≠p nh·∫≠t h·ªá th·ªëng v√† c√†i ƒë·∫∑t c√¥ng c·ª•!${NC}"

# 2Ô∏è‚É£ C√†i ƒë·∫∑t Go 1.21.6
echo -e "${CYAN}üì• C√†i ƒë·∫∑t Go phi√™n b·∫£n 1.21.6...${NC}"
wget https://go.dev/dl/go1.21.6.linux-amd64.tar.gz -O go1.21.6.tar.gz
sudo tar -C /usr/local -xzf go1.21.6.tar.gz
echo "export GOROOT=/usr/local/go" >> ~/.bashrc
echo "export GOPATH=\$HOME/go" >> ~/.bashrc
echo "export PATH=\$GOPATH/bin:\$GOROOT/bin:\$PATH" >> ~/.bashrc
source ~/.bashrc
rm go1.21.6.tar.gz
go_version=$(go version)
echo -e "${GREEN}‚úÖ ƒê√£ c√†i ƒë·∫∑t $go_version!${NC}"

# 3Ô∏è‚É£ C√†i ƒë·∫∑t Rust v√† Cargo
echo -e "${CYAN}üì• C√†i ƒë·∫∑t Rust v√† Cargo...${NC}"
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
source $HOME/.cargo/env
rustc_version=$(rustc --version)
echo -e "${GREEN}‚úÖ ƒê√£ c√†i ƒë·∫∑t Rust: $rustc_version!${NC}"
sudo apt install cargo -y

# 4Ô∏è‚É£ C√†i ƒë·∫∑t v√† ki·ªÉm tra Risc0 Toolchain
echo -e "${CYAN}üì• C√†i ƒë·∫∑t Risc0 Toolchain...${NC}"
curl -L https://risczero.com/install | bash
source "/root/.bashrc"
echo -e "C√†i ƒë·∫∑t Risc0 toolchain..."
rzup install
source "/root/.bashrc"
if command -v rzup >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Risc0 Toolchain ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t!${NC}"
    rzup_version=$(rzup --version)
    echo -e "Phi√™n b·∫£n Risc0: $rzup_version"
else
    echo -e "${RED}‚ùå Kh√¥ng t√¨m th·∫•y Risc0 Toolchain. C√†i ƒë·∫∑t l·∫°i...${NC}"
    curl -L https://risczero.com/install | bash
    rzup install
    source "/root/.bashrc"
    if ! command -v rzup >/dev/null 2>&1; then
        echo -e "${RED}‚ùå L·ªói c√†i ƒë·∫∑t Risc0 Toolchain. Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi m·∫°ng ho·∫∑c ch·∫°y th·ªß c√¥ng.${NC}"
        exit 1
    fi
fi

# 5Ô∏è‚É£ Sao ch√©p kho l∆∞u tr·ªØ Light Node
echo -e "${YELLOW}üîó ƒêang sao ch√©p kho l∆∞u tr·ªØ LayerEdge Light Node...${NC}"
rm -rf $HOME/light-node
git clone https://github.com/Layer-Edge/light-node.git $HOME/light-node
cd $HOME/light-node
echo -e "${GREEN}‚úÖ ƒê√£ sao ch√©p kho l∆∞u tr·ªØ!${NC}"

# 6Ô∏è‚É£ C·∫•u h√¨nh t·ªáp .env
echo -e "${YELLOW}üîÑ C·∫•u h√¨nh bi·∫øn m√¥i tr∆∞·ªùng...${NC}"
echo -e "${CYAN}üîë Vui l√≤ng nh·∫≠p kh√≥a ri√™ng EVM c·ªßa b·∫°n (c√≥ th·ªÉ d√πng v√≠ burner):${NC}"
read -p "Nh·∫≠p kh√≥a ri√™ng: " PRIVATE_KEY
cat > .env << EOL
GRPC_URL=grpc.testnet.layeredge.io:9090
CONTRACT_ADDR=cosmos1ufs3tlq4umljk0qfe8k5ya0x6hpavn897u2cnf9k0en9jr7qarqqt56709
ZK_PROVER_URL=http://127.0.0.1:3001
API_REQUEST_TIMEOUT=100
POINTS_API=light-node.layeredge.io
PRIVATE_KEY=$PRIVATE_KEY
EOL
echo -e "${GREEN}‚úÖ ƒê√£ t·∫°o t·ªáp .env v·ªõi kh√≥a ri√™ng c·ªßa b·∫°n!${NC}"

# 7Ô∏è‚É£ D·ªçn d·∫πp c√°c phi√™n screen c≈©
echo -e "${YELLOW}üßπ D·ªçn d·∫πp c√°c phi√™n screen c≈©...${NC}"
screen -ls | grep Detached | awk '{print $1}' | xargs -I {} screen -X -S {} quit
echo -e "${GREEN}‚úÖ ƒê√£ x√≥a c√°c phi√™n screen c≈©!${NC}"

# 8Ô∏è‚É£ Ki·ªÉm tra c·ªïng 3001
echo -e "${YELLOW}üîç Ki·ªÉm tra c·ªïng 3001...${NC}"
if netstat -tuln | grep -q ":3001"; then
    echo -e "${RED}‚ùå C·ªïng 3001 ƒë√£ b·ªã chi·∫øm d·ª•ng. Vui l√≤ng d·ª´ng d·ªãch v·ª• ƒëang d√πng c·ªïng n√†y.${NC}"
    exit 1
else
    echo -e "${GREEN}‚úÖ C·ªïng 3001 tr·ªëng, s·∫µn s√†ng ch·∫°y Risc0 Merkle Service!${NC}"
fi

# 9Ô∏è‚É£ Ch·∫°y Risc0 Merkle Service
echo -e "${YELLOW}üõ†Ô∏è Bi√™n d·ªãch v√† ch·∫°y Risc0 Merkle Service...${NC}"
cd $HOME/light-node/risc0-merkle-service
cargo build
if [ $? -eq 0 ]; then
    screen -S layeredge -dm bash -c "cargo run > $HOME/risc0-merkle.log 2>&1"
    sleep 5
    if screen -ls | grep -q "layeredge"; then
        echo -e "${GREEN}üöÄ Risc0 Merkle Service ƒëang ch·∫°y trong phi√™n screen 'layeredge'!${NC}"
        echo -e "Log ƒë∆∞·ª£c l∆∞u t·∫°i: ${CYAN}$HOME/risc0-merkle.log${NC}"
    else
        echo -e "${RED}‚ùå Risc0 Merkle Service kh√¥ng ch·∫°y. Ki·ªÉm tra log t·∫°i $HOME/risc0-merkle.log${NC}"
        cat $HOME/risc0-merkle.log
        exit 1
    fi
else
    echo -e "${RED}‚ùå L·ªói khi bi√™n d·ªãch Risc0 Merkle Service. Vui l√≤ng ki·ªÉm tra log ho·∫∑c Rust/Risc0.${NC}"
    exit 1
fi

# 10Ô∏è‚É£ Bi√™n d·ªãch v√† ch·∫°y Light Node
echo -e "${YELLOW}üñ•Ô∏è Bi√™n d·ªãch v√† ch·∫°y Light Node...${NC}"
cd $HOME/light-node
go build
if [ $? -eq 0 ]; then
    if [ -f ./light-node ]; then
        screen -S light-node -dm bash -c "./light-node > $HOME/light-node.log 2>&1"
        sleep 5
        if screen -ls | grep -q "light-node"; then
            echo -e "${GREEN}üöÄ Light Node ƒëang ch·∫°y trong phi√™n screen 'light-node'!${NC}"
            echo -e "Log ƒë∆∞·ª£c l∆∞u t·∫°i: ${CYAN}$HOME/light-node.log${NC}"
        else
            echo -e "${RED}‚ùå Light Node kh√¥ng ch·∫°y. Ki·ªÉm tra log t·∫°i $HOME/light-node.log${NC}"
            cat $HOME/light-node.log
            exit 1
        fi
    else
        echo -e "${RED}‚ùå Kh√¥ng t√¨m th·∫•y t·ªáp th·ª±c thi 'light-node'. Vui l√≤ng ki·ªÉm tra l·∫°i.${NC}"
        exit 1
    fi
else
    echo -e "${RED}‚ùå L·ªói khi bi√™n d·ªãch Light Node. Vui l√≤ng ki·ªÉm tra Go v√† .env.${NC}"
    exit 1
fi

# 11Ô∏è‚É£ Ki·ªÉm tra tr·∫°ng th√°i v√† ho√†n t·∫•t
echo -e "${GREEN}üéâ Qu√° tr√¨nh c√†i ƒë·∫∑t ho√†n t·∫•t!${NC}"
echo -e "C√°c d·ªãch v·ª• ƒëang ch·∫°y trong n·ªÅn:"
echo -e "  - Risc0 Merkle Service: ${CYAN}screen -r layeredge${NC}"
echo -e "  - Light Node: ${CYAN}screen -r light-node${NC}"
echo -e "ƒê·ªÉ ki·ªÉm tra, d√πng l·ªánh tr√™n. ƒê·ªÉ d·ª´ng, v√†o screen v√† nh·∫•n CTRL+C, r·ªìi g√µ 'exit'."
echo -e "${YELLOW}üîç Ki·ªÉm tra danh s√°ch screen:${NC}"
screen -ls
echo -e "${YELLOW}üí° Ki·ªÉm tra log n·∫øu c√≥ l·ªói:${NC}"
echo -e "  - Risc0 Merkle Service: ${CYAN}cat $HOME/risc0-merkle.log${NC}"
echo -e "  - Light Node: ${CYAN}cat $HOME/light-node.log${NC}"
